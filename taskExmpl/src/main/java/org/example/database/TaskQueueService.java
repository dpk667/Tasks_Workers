package org.example.database;


import org.example.model.Task;

/**
 * данный интерфейс отвечает за работу с очередью задач
 * интерфейс позволяет управлять списком задач, которые необходимо обработать
 * а так же вызывает методы TaskProcessor для их выполнения
 */

public interface TaskQueueService {
    // добавляем задачу в конец очереди задач
    void addTask(Task task);

    // проверяем успешно добавили ли мы задачу в конец очереди, ловим исключение в случае неудачи
    boolean add(Task task);

    // проверяем успешно добавили ли мы задачу в конец очереди, ожидаем булевское значение
    boolean offer(Task task);

    // удаляем и возвращаем головной элемент очереди задач и выбрасываем исключение, если очередь пуста
    Task remove();

    // возвращаем головной элемент очереди задач и выбрасывает исключение, если очередь пуста
    Task element();

    // возвращаем головной элемент очереди задач или возвращаем null, если очередь пуста
    Task peek();

    // удаляем и возвращаем головной элемент очереди задач или возвращает null, если очередь пуста
    Task getNextTask();
}

